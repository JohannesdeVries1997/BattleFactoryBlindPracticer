@inject HttpClient _client
@using Newtonsoft.Json
@using BattleFactoryBlindPracticer.Model

<ul>
    <li><MoveComponent @ref=@Move1 IsGuessable=@IsGuessable PossibleMoves=@AllMoves Move=@Moves[0]></MoveComponent></li>
    <li><MoveComponent @ref=@Move2 IsGuessable=@IsGuessable PossibleMoves=@AllMoves Move=@Moves[1]></MoveComponent></li>
    <li><MoveComponent @ref=@Move3 IsGuessable=@IsGuessable PossibleMoves=@AllMoves Move=@Moves[2]></MoveComponent></li>
    <li><MoveComponent @ref=@Move4 IsGuessable=@IsGuessable PossibleMoves=@AllMoves Move=@Moves[3]></MoveComponent></li>
</ul>

<button @onclick="ConfirmClick">Confirm</button>

@code {
    [Parameter]
    public bool IsGuessable { get; set; } = false;

    [Parameter]
    public string[] Moves { get; set; } = { "None", "None", "None", "None" };

    private List<string> AllMoves = new();

    private MoveComponent Move1 = new();
    private MoveComponent Move2 = new();
    private MoveComponent Move3 = new();
    private MoveComponent Move4 = new();

    private void ConfirmClick()
    {
        Move1.HandleMoveCheck();
        Move2.HandleMoveCheck();
        Move3.HandleMoveCheck();
        Move4.HandleMoveCheck();
    }

    public void ResetComponent()
    {
        Move1.ResetComponent();
        Move2.ResetComponent();
        Move3.ResetComponent();
        Move4.ResetComponent();
    }

    protected override async Task OnInitializedAsync()
    {
        AllMoves = await DataGetter.GetAllMoves(_client);
    }
}
